#!/usr/bin/env bash
#

#
# PDB check
#  - Based on http://www.snip2code.com/Snippet/165926/Check-for-ipdb-breakpoints-git-hook
#
PDB_CHECK="$(git grep -E -n '[ ;]i?pdb')"

if [[ "${#PDB_CHECK}" -gt 0 ]]
then
    echo -e "\n\e[4;31mCOMMIT REJECTED: you cannot commit due an error!""\e[0m"
    echo -e " \e[31m├\e[0m Your code contains at least one break point;"
    echo -e " \e[31m│\e[0m  please, remove them before committing."
    echo -e " \e[31m│\e[0m"
    echo -e " \e[31m└\e[0m If instead you know \e[4;33mEXACTLY\e[0m what you're doing,"
    echo -e "    you can force commit using \"\e[0;36mgit commit --no-verify\e[0m\".\n"
    echo -e "${PDB_CHECK}"

    exit 1
fi

#
# Uncompleted merge check
#
MERGE_CHECK="$(git grep -E -n '^([><]{7} \S+|={7})$')"

if [[ "${#MERGE_CHECK}" -gt 0 ]]
then
    echo -e "\n\e[4;31mCOMMIT REJECTED: you cannot commit due an error!""\e[0m"
    echo -e " \e[31m├\e[0m Your code contains at least one merge conflict;"
    echo -e " \e[31m│\e[0m  please, solve them before committing."
    echo -e " \e[31m│\e[0m"
    echo -e " \e[31m└\e[0m If instead you know \e[4;33mEXACTLY\e[0m what you're doing,"
    echo -e "    you can force commit using \"\e[0;36mgit commit --no-verify\e[0m\".\n"
    echo -e "${MERGE_CHECK}"

    exit 1
fi
